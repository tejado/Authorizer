/*
 * Copyright (Â©) 2016 Jeff Harris <jefftharris@gmail.com>
 * All rights reserved. Use of the code is allowed under the
 * Artistic License 2.0 terms, as specified in the LICENSE file
 * distributed with this code, or available from
 * http://www.opensource.org/licenses/artistic-license-2.0.php
 */

apply plugin: 'com.android.application'

android {
    namespace 'net.tjado.passwdsafe'

    compileSdkVersion 33
    defaultConfig {
        applicationId 'net.tjado.passwdsafe'
        minSdkVersion 21
        resourceConfigurations += ['de']
        targetSdkVersion 33
        versionCode 500
        versionName '0.5.0'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Reference them in .xml files.
        resValue "string", "application_id", "${applicationId}"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString(),
                             "room.incremental":"true"]
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles += 'proguard-rules.pro'
            proguardFiles += 'proguard-rules-debug.pro'
            testProguardFiles += 'proguard-rules-test.pro'
            ndk {
                debugSymbolLevel "FULL"
            }
        }
        release {
            minifyEnabled true
            proguardFiles += 'proguard-rules.pro'

            ndk {
                debugSymbolLevel "FULL"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    productFlavors {
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    ndkVersion = '21.3.6528147'

    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
    }
    testOptions {
        animationsDisabled true
    }
}

if (project.file('../sign/sign.gradle').exists()) {
    apply from: '../sign/sign.gradle'
}

dependencies {
    def room_version = "2.4.3"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':lib')

    implementation 'androidx.appcompat:appcompat:1.6.0-rc01'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'


    implementation 'com.github.bmelnychuk:atv:1.2.9'
    implementation 'com.mikepenz:iconics-core:2.8.1@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.2@aar'
    implementation 'com.mikepenz:devicon-typeface:2.0.0.2@aar'
    implementation 'com.mikepenz:materialize:1.0.0@aar'
    implementation 'com.mikepenz:fastadapter:2.0.0@aar'
    implementation 'org.bouncycastle:bcprov-jdk18on:1.71.1'
    implementation 'org.bouncycastle:bcpg-jdk18on:1.71.1'
    implementation 'io.fotoapparat.fotoapparat:library:1.4.1'
    implementation 'com.google.zxing:core:3.5.1'

    // FIDO (WebAuthn/U2F) dependencies
    implementation 'co.nstant.in:cbor:0.9'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.google.guava:guava:31.1-android'
    implementation 'rocks.xmpp:precis:1.1.0'

    implementation "androidx.room:room-runtime:$room_version"

    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Core library
    androidTestImplementation 'androidx.test:core:1.5.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.5.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.5.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.5.0'
}
